"use strict";

// 숫자 포맷팅 함수
function formatNumber(num) {
    if (isNaN(num)) return ""; // 숫자가 아니면 빈 문자열 반환
    return num.toLocaleString();
}

// 숫자 포맷 해제 함수
function unformatNumber(str) {
    if (typeof str !== 'string') return NaN;
    return Number(str.replace(/,/g, ""));
}

// 유효성 검사 함수
function validateInputs() {
    const loanAmount = document.getElementById('loanAmount').value.trim();
    const loanPeriod = document.getElementById('loanPeriod').value.trim();
    const interestRate = document.getElementById('interestRate').value.trim();
    const repaymentMethod = document.getElementById('repaymentMethod').value;

    let isValid = true;

    // 대출 금액 유효성 검사
    if (!loanAmount || isNaN(unformatNumber(loanAmount)) || unformatNumber(loanAmount) <= 0) {
        document.getElementById('loanAmountError').textContent = "유효한 대출 금액을 입력하세요.";
        isValid = false;
    } else {
        document.getElementById('loanAmountError').textContent = "";
    }

    // 대출 기간 유효성 검사
    if (!loanPeriod || isNaN(loanPeriod) || loanPeriod <= 0) {
        document.getElementById('loanPeriodError').textContent = "유효한 대출 기간을 입력하세요.";
        isValid = false;
    } else {
        document.getElementById('loanPeriodError').textContent = "";
    }

    // 이자율 유효성 검사
    if (!interestRate || isNaN(interestRate) || interestRate <= 0) {
        document.getElementById('interestRateError').textContent = "유효한 이자율을 입력하세요.";
        isValid = false;
    } else {
        document.getElementById('interestRateError').textContent = "";
    }

    // 상환 방식 선택 확인
    if (!repaymentMethod) {
        isValid = false; // 상환 방식이 선택되지 않으면 비활성화 유지
    }

    // 버튼 활성화/비활성화
    document.getElementById('calculateButton').disabled = !isValid;

    return isValid;
}

// 실시간 입력 이벤트 리스너 추가
document.querySelectorAll('#loanAmount, #loanPeriod, #interestRate, #repaymentMethod').forEach(input => {
    input.addEventListener('input', validateInputs);
});

// 계산 함수
document.getElementById("calculateButton").addEventListener("click", function () {
    if (!validateInputs()) return;

    const loanAmount = unformatNumber(document.getElementById("loanAmount").value.trim());
    const loanPeriod = parseInt(document.getElementById("loanPeriod").value.trim());
    const interestRate = parseFloat(document.getElementById("interestRate").value.trim()) / 100;
    const repaymentMethod = document.getElementById("repaymentMethod").value;

    const resultDiv = document.getElementById("result");
    
    let resultText = "";

    switch (repaymentMethod) {
        case "만기일시상환":
            const totalInterest1 = Math.floor(loanAmount * interestRate * loanPeriod);
            const totalRepayment1 = Math.floor(loanAmount + totalInterest1);
            resultText += `<p>총 이자: ${formatNumber(totalInterest1)} 원</p>`;
            resultText += `<p>총 상환액: ${formatNumber(totalRepayment1)} 원</p>`;
            break;

        case "원금균등분할상환":
            const monthlyPrincipal = loanAmount / (loanPeriod * 12);
            let totalInterest2 = 0;

            for (let i = 0; i < loanPeriod * 12; i++) {
                const remainingLoan = loanAmount - (monthlyPrincipal * i);
                totalInterest2 += remainingLoan * (interestRate / 12);
            }

            const totalRepayment2 = Math.floor(loanAmount + totalInterest2);
            resultText += `<p>총 이자: ${formatNumber(totalInterest2)} 원</p>`;
            resultText += `<p>총 상환액: ${formatNumber(totalRepayment2)} 원</p>`;
            break;

        case "원리금균등분할상환":
            const monthlyRate = interestRate / 12;
            const months = loanPeriod * 12;
            const monthlyPayment3 = Math.floor((loanAmount * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -months)));
            const totalRepayment3 = Math.floor(monthlyPayment3 * months);
            resultText += `<p>총 이자: ${formatNumber(totalRepayment3 - loanAmount)} 원</p>`;
            resultText += `<p>총 상환액: ${formatNumber(totalRepayment3)} 원</p>`;
            break;

        default:
            resultText += "<p>오류가 발생했습니다.</p>";
            break;
    }

    resultDiv.innerHTML = resultText; // 결과 출력
});
